athena:Classical Planning kyletopasna$ pypy3 run_search.py -p 1 -s 1 2 3 4 5 6 7 8 9 10 11

Solving Air Cargo Problem 1 using breadth_first_search...

# Actions   Expansions   Goal Tests   New Nodes
    20          43          56         178

Plan length: 6  Time elapsed in seconds: 0.04268798099656124
Load(C1, P1, SFO)
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)
Fly(P1, SFO, JFK)
Unload(C1, P1, JFK)


Solving Air Cargo Problem 1 using depth_first_graph_search...

# Actions   Expansions   Goal Tests   New Nodes
    20          21          22          84

Plan length: 20  Time elapsed in seconds: 0.012300233000132721
Fly(P1, SFO, JFK)
Fly(P2, JFK, SFO)
Load(C2, P1, JFK)
Fly(P1, JFK, SFO)
Fly(P2, SFO, JFK)
Unload(C2, P1, SFO)
Fly(P1, SFO, JFK)
Fly(P2, JFK, SFO)
Load(C2, P2, SFO)
Fly(P1, JFK, SFO)
Load(C1, P2, SFO)
Fly(P2, SFO, JFK)
Fly(P1, SFO, JFK)
Unload(C2, P2, JFK)
Unload(C1, P2, JFK)
Fly(P2, JFK, SFO)
Load(C2, P1, JFK)
Fly(P1, JFK, SFO)
Fly(P2, SFO, JFK)
Unload(C2, P1, SFO)


Solving Air Cargo Problem 1 using uniform_cost_search...

# Actions   Expansions   Goal Tests   New Nodes
    20          60          62         240

Plan length: 6  Time elapsed in seconds: 0.030820906002190895
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Load(C1, P2, SFO)
Unload(C2, P2, SFO)
Fly(P2, SFO, JFK)
Unload(C1, P2, JFK)


Solving Air Cargo Problem 1 using greedy_best_first_graph_search with h_unmet_goals...

# Actions   Expansions   Goal Tests   New Nodes
    20          7           9           29

Plan length: 6  Time elapsed in seconds: 0.00302458099758951
Load(C1, P1, SFO)
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)
Fly(P1, SFO, JFK)
Unload(C1, P1, JFK)


Solving Air Cargo Problem 1 using greedy_best_first_graph_search with h_pg_levelsum...

# Actions   Expansions   Goal Tests   New Nodes
    20          6           8           28

Plan length: 6  Time elapsed in seconds: 0.8267793740014895
Load(C1, P1, SFO)
Fly(P1, SFO, JFK)
Unload(C1, P1, JFK)
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)


Solving Air Cargo Problem 1 using greedy_best_first_graph_search with h_pg_maxlevel...

# Actions   Expansions   Goal Tests   New Nodes
    20          6           8           24

Plan length: 6  Time elapsed in seconds: 0.2309099550038809
Load(C1, P1, SFO)
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Fly(P1, SFO, JFK)
Unload(C2, P2, SFO)
Unload(C1, P1, JFK)


Solving Air Cargo Problem 1 using greedy_best_first_graph_search with h_pg_setlevel...

# Actions   Expansions   Goal Tests   New Nodes
    20          6           8           28

Plan length: 6  Time elapsed in seconds: 1.0282563729997491
Load(C1, P1, SFO)
Fly(P1, SFO, JFK)
Unload(C1, P1, JFK)
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)


Solving Air Cargo Problem 1 using astar_search with h_unmet_goals...

# Actions   Expansions   Goal Tests   New Nodes
    20          50          52         206

Plan length: 6  Time elapsed in seconds: 0.019108485998003744
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)
Load(C1, P2, SFO)
Fly(P2, SFO, JFK)
Unload(C1, P2, JFK)


Solving Air Cargo Problem 1 using astar_search with h_pg_levelsum...

# Actions   Expansions   Goal Tests   New Nodes
    20          28          30         122

Plan length: 6  Time elapsed in seconds: 0.3943380850032554
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)
Load(C1, P2, SFO)
Fly(P2, SFO, JFK)
Unload(C1, P2, JFK)


Solving Air Cargo Problem 1 using astar_search with h_pg_maxlevel...

# Actions   Expansions   Goal Tests   New Nodes
    20          43          45         180

Plan length: 6  Time elapsed in seconds: 0.34710446200188017
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Load(C1, P2, SFO)
Unload(C2, P2, SFO)
Fly(P2, SFO, JFK)
Unload(C1, P2, JFK)


Solving Air Cargo Problem 1 using astar_search with h_pg_setlevel...

# Actions   Expansions   Goal Tests   New Nodes
    20          33          35         138

Plan length: 6  Time elapsed in seconds: 1.048690377996536
Load(C2, P2, JFK)
Fly(P2, JFK, SFO)
Unload(C2, P2, SFO)
Load(C1, P2, SFO)
Fly(P2, SFO, JFK)
Unload(C1, P2, JFK)

athena:Classical Planning kyletopasna$